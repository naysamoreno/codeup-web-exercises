--Primitive Types------------------------
1. Boolean
2. Number
3. String
4. *Undefined
5. *Null

--Complex Type------------------------
1. Object
2. Function
3. Array

--Operators------------------------

+ addition
- subtraction
* multiplication
/ division
% modulus (remainder of what is divided)

-- String Concatenation ------------------------
using the + operator you can add strings together
ex. "hello, " + "world!" = "hello, world!'

-- Logical Booleans ------------------------

1. && AND -- True if both are true, false otherwise
2. || OR -- True if at least one is true, false otherwise
3 ! NOT -- the opposite

-- Comparison -------------------------
1. == Equal in value
2. === Equal in type and value
3. != not equal in value
4. !== not equal in type and value

-- Converting between numbers and Strings --------------
var x = 3.14;
x.toString(); // "3.14"
x.toFixed(3); // "3.140"

Number('123') // 123
Number('0.9') // 0.9

Number('asdf') // NaN (Not a Number)

isNaN(42) // true

parseInt: attempts to convert a string to an integer value (whole number)

parseFloat: attempts to convert a string to a floating point (i.e. decimal) value
Number('123abc') // NaN
parseInt('123abc') // 123

.length: property that describes the number of characters in the string.
.indexOf(char): returns the index of the specified character in the string.
.replace(find, replace): returns a copy of the string after performing a substitution.
.substring(fromIndex, toIndex): returns a subset of the original string based on the provided indices.
.toUpperCase(): returns a copy of the string in all upper case.
.toLowerCase(): returns a copy of the string in all lower case.
.trim(): returns a copy of the string with whitespace at the beginning and end removed.

--User Interaction --------------------------------------

alert("message here") -- sends an alert to the user

confirm("message") -- responds either true or false

prompt("type something request") -- allows the user to give a
response and can be saved as a variable

ex.
var userInput = prompt('Please type something:');
console.log('The user entered: ' + userInput);

-- Functions ----------------------------------------------
REUSABLE BLOCK OF CODE THAT PERFORMS A SPECIFIC TASK

functionName("argument")

-- Anonymous Functions ----------------------------------------------
you can insert a function within a variable and call the variable
ex. var increment = function(x) {
        return x + 1;
    };

    var two = increment(1);
-- Arguments and Parameters ------------------------
arguments are values inside (value) the function
parameter is a hypothetical (input parameter) inside a function

-- Alternative to Long if/Else statements are SWITCH Statements --

EXAMPLE :

function analyzeColor(colors) {
     switch (colors) {
         case "red":
            return 'red like raspberries';
            break;
         case "orange":
             return 'orange like oranges';
             break;
         case "yellow":
             return 'yellow like sunflowers';
             break;
         case "green":
            return 'green like shrek';
            break;
         case "blue":
             return 'blue like ocean';
             break;
         default:
             return 'I do not know anything about ' + colors;
             break;
     }
 }

-- While Loops ---------------------------------------
A while loop is a basic looping construct that
will execute a code block as long as a certain condition is true.

EXAMPLE
while (/*condition*/) {
    // body
}
EXAMPLE 2

var i = 0;
while (i < 10) {
    console.log('while loop iteration #' + i);
    i++;
}

-- DO WHILE ----------------------------------------------
the condition is evaluated at the end of the loop instead of the beginning.
do {
    //body
} while(/*condition*/);

EXAMPLE
var i = 10;
do {
    console.log('while loop iteration #' + i);
    i++;
} while (i < 10);

-- For Loops ----------------------------------------------
for (/*initialization*/; /*condition*/; /*increment*/) {
    // body
}
EXAMPLE
for (var i = 0; i < 10; i++) {
    console.log('for loop iteration #' + i);
}

------ Break and Continue ---------------------------------------
Break~~~~~~~

once a condition is met and you want it to stop use Break
var numberToStopAt = 5;

for (var i = 1; i < 100; i++) {

    console.log('Loop counter is: ' + i);

    if (i === numberToStopAt) {
        console.log('We have reached the stopping point: break!');
        // use the break keyword to exit from the while loop
        break;
        // nothing after the break will get processed
        console.log('You will never see this line.');
    }
}
Continue ~~~~~~~~~
in the continue case whatever condition you set in the if statement can be
skipped over. In the example below anything that is NOT even will not be displayed.

for (var i = 1; i < 100; i++) {

    if (i % 2 !== 0) {
        // number isn't even
        // odd numbers aren't as cool
        // skip the rest of the loop and continue with the next iteration
        continue;
    }

    console.log('Here is a lovely even number: ' + i);
}